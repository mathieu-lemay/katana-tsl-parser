[tool.poetry]
name = "katana-tsl-parser"
version = "0.1.0"
description = "'Parse Katana TSL files'"
authors = ["Mathieu Lemay <acidrain1@gmail.com>"]
license = "MIT"
readme = "README.md"
include = ["katana_tsl_parser/py.typed"]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^1.10.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
mypy = "^1.5.1"
devtools = {extras = ["pygments"], version = "^0.11.0"}
pytest-cov = "^4.0.0"

[tool.mypy]
namespace_packages=true
explicit_package_bases=true
strict=true
show_error_codes=true
plugins=[
    "pydantic.mypy",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
select = [
    "ALL",
]
ignore = [
    "COM",  # flake8-commas
    "FIX",  # flake8-fixme
    "TD",  # flake8-todos

    "D1",  # pydocstyle: undocumented-public-*
    "D203",  # pydocstyle: one-blank-line-before-class (incompatible with D211)
    "D213",  # pydocstyle: multi-line-summary-second-line (incompatible with D212)
    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in method

    #"PLR2004",  # Magic value used in comparison, consider replacing `x` with a constant variable
]
target-version = "py310"

[tool.ruff.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.field_validator",
    "pydantic.model_validator",
    "pydantic.root_validator",
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "PLR2004",  # Magic value used in comparison
    "S101",  # Use of `assert` detected
    "S105",  # Possible hardcoded password
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
