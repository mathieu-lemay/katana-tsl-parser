[project]
name = "katana-tsl-parser"
version = "0.1.0"
description = "'Parse Katana TSL files'"
authors = [
    { name = "Mathieu Lemay", email = "acidrain1@gmail.com" }
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10, <4"
dependencies = [
    "pydantic (>=2.4.2,<3)",
]

[project.scripts]
tsl-parser = "katana_tsl_parser.main:main"
[dependency-groups]
dev = [
    "mypy (>=1.16.1,<2)",
    "pytest (>=8.4.1,<9)",
    "devtools (>=0.12.2,<0.13.0)",
    "pytest-cov (>=5.0.0,<6)",
]

[tool.mypy]
namespace_packages = true
explicit_package_bases = true
strict = true
show_error_codes = true
plugins = [
    "pydantic.mypy",
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]

[tool.ruff]
target-version = "py310"
exclude = [
    ".venv",
]

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    "COM",  # flake8-commas
    "D",  # pydocstyle
    "FIX",  # flake8-fixme
    "TD",  # flake8-todos

    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in method

    #"PLR2004",  # Magic value used in comparison, consider replacing `x` with a constant variable
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.field_validator",
    "pydantic.model_validator",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "PLR2004",  # Magic value used in comparison
    "S101",  # Use of `assert` detected
    "S105",  # Possible hardcoded password
]

[tool.uv]
add-bounds = "major"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
